{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","logic/calculate.js","logic/isNumber.js","component/App.js","index.js"],"names":["Display","className","this","props","value","React","Component","Button","handleClick","clickHandler","name","orange","wide","red","green","join","trim","onClick","ButtonPanel","buttonName","keyMap","1","2","3","4","5","6","7","8","9","0","EQUAL","MULTIPLY","ADD","SUBTRACT","DIVIDE","AC","DOT","PERCENT","handlers","console","log","total","next","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","calculate","obj","test","second","result","includes","parseFloat","App","state","setState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a32631ad.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    green: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n      this.props.red ? \"red\" : \"\",\n      \n      this.props.green ? \"green\" : \"\",\n\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button className=\"buttonText\" onClick={this.handleClick}>{this.props.name}</button>\n      </div>\n    );\n  }\n}\n","import Button from \"./Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ButtonPanel.css\";\nimport { HotKeys, GlobalHotKeys } from \"react-hotkeys\";\n\nexport default class ButtonPanel extends React.Component {\n  static propTypes = {\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = buttonName => {\n    this.props.clickHandler(buttonName);\n  };\n\n  keyMap = {\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    0: \"0\",\n    EQUAL: \"enter\",\n    MULTIPLY: \"shift+8\",\n    ADD: \"shift+=\",\n    SUBTRACT: \"-\",\n    DIVIDE: \"/\",\n    AC: \"c\",\n    DOT: \".\",\n    PERCENT: \"shift+5\",\n  };\n\n  handlers = {\n    1: () => {\n      this.props.clickHandler(\"1\");\n    },\n    2: () => {\n      this.props.clickHandler(\"2\");\n    },\n    3: () => {\n      this.props.clickHandler(\"3\");\n    },\n    4: () => {\n      this.props.clickHandler(\"4\");\n    },\n    5: () => {\n      this.props.clickHandler(\"5\");\n    },\n    6: () => {\n      this.props.clickHandler(\"6\");\n    },\n    7: () => {\n      this.props.clickHandler(\"7\");\n    },\n    8: () => {\n      this.props.clickHandler(\"8\");\n    },\n    9: () => {\n      this.props.clickHandler(\"9\");\n    },\n    0: () => {\n      this.props.clickHandler(\"0\");\n    },\n    EQUAL: () => {\n      this.props.clickHandler(\"=\");\n    },\n    MULTIPLY: () => {\n      this.props.clickHandler(\"x\");\n    },\n    SUBTRACT: () => {\n      this.props.clickHandler(\"-\");\n    },\n    ADD: () => {\n      this.props.clickHandler(\"+\");\n    },\n    DIVIDE: () => {\n      this.props.clickHandler(\"รท\");\n    },\n    AC: () => {\n      this.props.clickHandler(\"AC\");\n    },\n    DOT: () => {\n      this.props.clickHandler(\".\");\n    },\n    PERCENT: () => {\n      this.props.clickHandler(\"%\");\n    },\n  };\n\n  render() {\n    console.log(this.props.total, this.props.next, \"button panel\");\n    return (\n      <GlobalHotKeys keyMap={this.keyMap} handlers={this.handlers}>\n        <div className=\"component-button-panel\">\n          <div>\n            <Button name=\"AC\" clickHandler={this.handleClick} red />\n            <Button name=\"+/-\" clickHandler={this.handleClick} orange />\n            <Button name=\"%\" clickHandler={this.handleClick} orange />\n            <Button name=\"รท\" clickHandler={this.handleClick} orange />\n          </div>\n          <div>\n            <Button name=\"7\" clickHandler={this.handleClick} />\n            <Button name=\"8\" clickHandler={this.handleClick} />\n            <Button name=\"9\" clickHandler={this.handleClick} />\n            <Button name=\"x\" clickHandler={this.handleClick} orange />\n          </div>\n          <div>\n            <Button name=\"4\" clickHandler={this.handleClick} />\n            <Button name=\"5\" clickHandler={this.handleClick} />\n            <Button name=\"6\" clickHandler={this.handleClick} />\n            <Button name=\"-\" clickHandler={this.handleClick} orange />\n          </div>\n          <div>\n            <Button name=\"1\" clickHandler={this.handleClick} />\n            <Button name=\"2\" clickHandler={this.handleClick} />\n            <Button name=\"3\" clickHandler={this.handleClick} />\n            <Button name=\"+\" clickHandler={this.handleClick} orange />\n          </div>\n          <div>\n            <Button name=\"0\" clickHandler={this.handleClick} wide />\n            <Button name=\".\" clickHandler={this.handleClick} />\n            <Button name=\"=\" clickHandler={this.handleClick} green />\n          </div>\n        </div>\n      </GlobalHotKeys>\n    );\n  }\n}\n","import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || \"0\"); //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"รท\") {\n    if (two === \"0\") {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  console.log(obj);\n  if (buttonName === \"AC\") {\n    return {\n      total: \"\",\n      next: \"\",\n      operation: \"\",\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    const second = Big(obj.next * obj.total)\n      .div(Big(\"100\"))\n      .toString(); \n    const result = operate(obj.total, second, obj.operation);\n    if (obj.operation && obj.next) {\n      console.log(result, obj.operation);\n      return {\n        total: Big(result).toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: result,\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      console.log(obj, \"obj\")\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n  console.log(\"somewhat\")\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item);\n}\n","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel total={this.state.total} next={this.state.next} operation={this.state.operation} clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}